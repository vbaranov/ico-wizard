// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StepTwoForm should render StepTwoForm for Dutch Auction Crowdsale 1`] = `
<form
  id="tokenData"
  onSubmit={[Function]}
>
  <div
    className="hidden"
  >
    <div
      className="left"
    >
      <label
        className="label"
        htmlFor="name"
      >
        Name
      </label>
      <input
        autoComplete="off"
        className="input"
        disabled={undefined}
        id="name"
        name="name"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        placeholder={undefined}
        type="text"
        value="This is a valid name"
      />
      <p
        className="description"
      >
        The name of your token. Will be used by Etherscan and other tokenbrowsers. Be afraid of trademarks.
      </p>
      <span>
        <p
          className="error"
          style={
            Object {
              "color": "red",
              "fontSize": "12px",
              "fontWeight": "bold",
              "height": "20px",
              "width": "100%",
            }
          }
        />
      </span>
    </div>
    <div
      className="right"
    >
      <label
        className="label"
        htmlFor="ticker"
      >
        Ticker
      </label>
      <input
        autoComplete="off"
        className="input"
        disabled={undefined}
        id="ticker"
        name="ticker"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        placeholder={undefined}
        type="text"
        value="TTK"
      />
      <p
        className="description"
      >
        The five letter ticker for your token. There are 11,881,376 combinations for 26 english letters. Be hurry.
      </p>
      <span>
        <p
          className="error"
          style={
            Object {
              "color": "red",
              "fontSize": "12px",
              "fontWeight": "bold",
              "height": "20px",
              "width": "100%",
            }
          }
        />
      </span>
    </div>
    <div
      className="left"
    >
      <label
        className="label"
        htmlFor="decimals"
      >
        Decimals
      </label>
      <input
        autoComplete="off"
        className="input"
        disabled={false}
        id="decimals"
        name="decimals"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        placeholder={undefined}
        type="text"
        value="14"
      />
      <p
        className="description"
      >
        Refers to how divisible a token can be, from 0 (not at all divisible) to 18 (pretty much continuous).
      </p>
      <span>
        <p
          className="error"
          style={
            Object {
              "color": "red",
              "fontSize": "12px",
              "fontWeight": "bold",
              "height": "20px",
              "width": "100%",
            }
          }
        />
      </span>
    </div>
    <div
      className="right"
    >
      <label
        className="label"
        htmlFor="supply"
      >
        Supply
      </label>
      <input
        autoComplete="off"
        className="input"
        disabled={undefined}
        id="supply"
        name="supply"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        placeholder={undefined}
        type="text"
        value=""
      />
      <p
        className="description"
      >
        The total supply of the token
      </p>
      <span>
        <p
          className="error"
          style={
            Object {
              "color": "red",
              "fontSize": "12px",
              "fontWeight": "bold",
              "height": "20px",
              "width": "100%",
            }
          }
        />
      </span>
    </div>
  </div>
  <div
    className="button-container"
  >
    <a
      className="button button_fill"
      onClick={[Function]}
    >
      Continue
    </a>
  </div>
</form>
`;

exports[`StepTwoForm should render StepTwoForm for Minted Capped Crowdsale 1`] = `
<form
  id="tokenData"
  onSubmit={[Function]}
>
  <div
    className="hidden"
  >
    <div
      className="left"
    >
      <label
        className="label"
        htmlFor="name"
      >
        Name
      </label>
      <input
        autoComplete="off"
        className="input"
        disabled={undefined}
        id="name"
        name="name"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        placeholder={undefined}
        type="text"
        value="This is a valid name"
      />
      <p
        className="description"
      >
        The name of your token. Will be used by Etherscan and other tokenbrowsers. Be afraid of trademarks.
      </p>
      <span>
        <p
          className="error"
          style={
            Object {
              "color": "red",
              "fontSize": "12px",
              "fontWeight": "bold",
              "height": "20px",
              "width": "100%",
            }
          }
        />
      </span>
    </div>
    <div
      className="right"
    >
      <label
        className="label"
        htmlFor="ticker"
      >
        Ticker
      </label>
      <input
        autoComplete="off"
        className="input"
        disabled={undefined}
        id="ticker"
        name="ticker"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        placeholder={undefined}
        type="text"
        value="TTK"
      />
      <p
        className="description"
      >
        The five letter ticker for your token. There are 11,881,376 combinations for 26 english letters. Be hurry.
      </p>
      <span>
        <p
          className="error"
          style={
            Object {
              "color": "red",
              "fontSize": "12px",
              "fontWeight": "bold",
              "height": "20px",
              "width": "100%",
            }
          }
        />
      </span>
    </div>
    <div
      className="left"
    >
      <label
        className="label"
        htmlFor="decimals"
      >
        Decimals
      </label>
      <input
        autoComplete="off"
        className="input"
        disabled={false}
        id="decimals"
        name="decimals"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        placeholder={undefined}
        type="text"
        value="14"
      />
      <p
        className="description"
      >
        Refers to how divisible a token can be, from 0 (not at all divisible) to 18 (pretty much continuous).
      </p>
      <span>
        <p
          className="error"
          style={
            Object {
              "color": "red",
              "fontSize": "12px",
              "fontWeight": "bold",
              "height": "20px",
              "width": "100%",
            }
          }
        />
      </span>
    </div>
  </div>
  <div>
    <div
      className="reserved-tokens-title"
    >
      <p
        className="title"
      >
        Reserved tokens
      </p>
    </div>
    <div
      className="reserved-tokens-container"
    >
      <div
        className="reserved-tokens-input-container"
      >
        <div
          className="reserved-tokens-input-container-inner"
        >
          <div
            className="reserved-tokens-input-property reserved-tokens-input-property-left"
          >
            <label
              className="label"
            >
              Address
            </label>
            <input
              className="input"
              disabled={undefined}
              onBlur={undefined}
              onChange={[Function]}
              onKeyPress={undefined}
              onPaste={undefined}
              style={undefined}
              type="text"
              value=""
            />
            <p
              className="description"
            >
              Address where to send reserved tokens.
            </p>
            <p
              className="error"
              style={
                Object {
                  "color": "red",
                  "fontSize": "12px",
                  "fontWeight": "bold",
                  "height": "10px",
                  "width": "100%",
                }
              }
            />
          </div>
          <div
            className="reserved-tokens-input-property reserved-tokens-input-property-middle"
          >
            <label
              className="label"
            >
              Dimension
            </label>
            <div
              className="radios-inline"
            >
              <label
                className="radio-inline"
              >
                <input
                  checked={true}
                  onChange={[Function]}
                  type="radio"
                  value="tokens"
                />
                <span
                  className="title"
                >
                  tokens
                </span>
              </label>
              <label
                className="radio-inline"
              >
                <input
                  checked={false}
                  onChange={[Function]}
                  type="radio"
                  value="percentage"
                />
                <span
                  className="title"
                >
                  percentage
                </span>
              </label>
            </div>
            <p
              className="description"
            >
              Fixed amount or % of crowdsaled tokens. Will be deposited to the account after finalization of the crowdsale.
            </p>
          </div>
          <div
            className="reserved-tokens-input-property reserved-tokens-input-property-right"
          >
            <label
              className="label"
            >
              Value
            </label>
            <input
              className="input"
              disabled={undefined}
              onBlur={undefined}
              onChange={[Function]}
              onKeyPress={[Function]}
              onPaste={[Function]}
              style={undefined}
              type="number"
              value=""
            />
            <p
              className="description"
            >
              Value in tokens. Don't forget to click + button for each reserved token.
            </p>
            <p
              className="error"
              style={
                Object {
                  "color": "red",
                  "fontSize": "12px",
                  "fontWeight": "bold",
                  "height": "10px",
                  "width": "100%",
                }
              }
            />
          </div>
        </div>
        <div
          className="plus-button-container"
        >
          <div
            className="button button_fill button_fill_plus"
            onClick={[Function]}
          />
        </div>
      </div>
      <div
        style={
          Object {
            "textAlign": "right",
          }
        }
      >
        <span>
          Dropzone
        </span>
      </div>
    </div>
  </div>
  <div
    className="button-container"
  >
    <a
      className="button button_fill"
      onClick={[Function]}
    >
      Continue
    </a>
  </div>
</form>
`;
